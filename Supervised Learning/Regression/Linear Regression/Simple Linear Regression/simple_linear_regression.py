# -*- coding: utf-8 -*-
"""Simple Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zw6DcpTLAW35wxuEsLvNTTqMmJeUDM3i

# Simple Linear Regression

## Importing the necessary Libraries and Packages
"""

from sklearn.model_selection import train_test_split # splitting the dataset
from sklearn.linear_model import LinearRegression # regression algorithm
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error, mean_squared_error # accuracy metric
import numpy as np # data processing
import pandas as pd # data processing 
import matplotlib.pyplot as plt # data plotting

"""## Importing the csv file as a DataFrame"""

df = pd.read_csv("Brain-Body.csv")
df.head()

"""## Now taking 2 parts from the dataset
### X : which contains only the <b>Brain Weight</b> column<br>y : which contains only the <b>Body Weight</b> column 
"""

X = df.loc[:,["Brain Weight"]]
y = df.loc[:,["Body Weight"]]
print("//Independent feature//")
print(X.head())
print("\n\n//Dependent feature//")
print(y.head())

"""## Visualization of the data"""

plt.figure(figsize=(8, 6),dpi=150)
brains = df['Brain Weight']
bodies = df['Body Weight']
plt.scatter(brains,bodies, label ="Data")
plt.title("Brain Weight vs Body Weight")
plt.xlabel("Brain Weight(Kg)")
plt.ylabel("Body Weight(Kg)")
plt.legend(loc="upper left")

"""## Split the <b>X</b> and <b>y</b> Dataframes for Test and Training"""

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.4,random_state=42)

"""## Implementation of the Model"""

reg=LinearRegression()
reg.fit(X_train,y_train)
y_pred = reg.predict(X_test)

"""## Performance of the Model"""

# Printing the coefficient of determination of the regression
print("The coefficient of determination :", r2_score(y_test,y_pred))

"""## Plotting the Regression"""

plt.figure(figsize=(8, 6), dpi=150)
plt.scatter(X_test,y_test,color='blue', label="data")
plt.plot(X_test,y_pred,color='red',label="test")
plt.title('Brain Weight vs Body Weight (Test Dataset)')
plt.xlabel('Brain Weight (Kg)')
plt.ylabel('Body Weight (Kg)')
plt.legend()

"""## Additional Performance Metrics"""

print('Mean Absolute Error (MAE) :', mean_absolute_error(y_test, y_pred))
print('Mean Squared Error (MSE) :', mean_squared_error(y_test, y_pred))
print('Root Mean Squared Error (RMSE) :', np.sqrt(mean_squared_error(y_test, y_pred)))